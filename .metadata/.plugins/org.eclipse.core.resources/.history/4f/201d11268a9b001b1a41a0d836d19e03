package Treni;

import java.util.LinkedList;
import java.util.List;

import ComponentiTreni.ComponenteTreno;
import ComponentiTreni.VagonePasseggeri;
import Exceptions.TroppiPasseggeriException;

public abstract class Treno {

	private List<ComponenteTreno> treno;

	public Treno() {
		this.treno = new LinkedList<ComponenteTreno>();
	}

	/**
	 * aggiunge un vagone al treno
	 * 
	 * @param vagone: vagone da aggiungere
	 */
	public final void aggiungiVagone(ComponenteTreno vagone) {
		this.treno.add(vagone);
	}

	/**
	 * accende il treno
	 */
	public final void accendi() {
		this.accendiPersonalizzata();
		System.out.print("\n");
	}

	/**
	 * stampa a video il treno
	 */
	public final void mostra() {
		for (ComponenteTreno componenteTreno : treno) {
			componenteTreno.stampa();
		}
		System.out.print("\n");
	}

	/**
	 * aggiunge dei passeggeri ai {@link VagonePasseggeri} contenuti nel treno
	 * 
	 * @param numeroPasseggeri: numero di passeggeri da aggiungere
	 * @throws Exception: lancia un'eccezione se il numero di passeggeri da
	 *                    aggiungere supera il numero di posti liberi
	 */
	public final void aggiungiPasseggeri(int numeroPasseggeri) throws Exception {
		if (numeroPasseggeri > capienza())
			throw new TroppiPasseggeriException(capienza());
		for (ComponenteTreno componenteTreno : treno) {
			if (componenteTreno instanceof VagonePasseggeri) {
				if (((VagonePasseggeri) componenteTreno).capienzaVagone() != 0) {
					int capienzaVagone = ((VagonePasseggeri) componenteTreno).capienzaVagone();
					((VagonePasseggeri) componenteTreno).aggiungiPassegggeri(capienzaVagone);
					numeroPasseggeri = numeroPasseggeri - capienzaVagone;
				}
			}
		}
	}
	
	public final double pesoMassimo() {
		double peso = 0;
		for (ComponenteTreno componenteTreno : treno) {
			peso = peso + componenteTreno.peso();
		}
		return peso;
	}

	/**
	 * calcola il numero di posti liberi nei {@link VagonePasseggeri} del treno
	 * 
	 * @return: numero di posti liberi
	 */
	private int capienza() {
		int capienza = 0;
		for (ComponenteTreno componenteTreno : treno) {
			if (componenteTreno instanceof VagonePasseggeri)
				capienza = capienza + ((VagonePasseggeri) componenteTreno).capienzaVagone();
		}
		return capienza;
	}

	/**
	 * accende il treno, varia a seconda del tipo di treno
	 */
	protected abstract void accendiPersonalizzata();

}
